// This file contains the proof of Lemma {lem:rat_16}

//What follows is the determination of the rational points on C_1

K<t>:=PolynomialRing(Rationals());
_<x>:=PolynomialRing(K);
f1:=(4*x^3 - 4*x^2 - 4*x + 4)*t^2 + (-4*x^3 - 4*x^2 - 12*x + 4)*t + x^3 - x^2 - x + 1;
d1:=Discriminant(f1);
C1_temp:=HyperellipticCurve(Numerator(d1)/256);
p:=128*t^7 - 240*t^6 + 112*t^5 - 12*t^4 + 80*t^3 - 88*t^2 + 32*t - 4;
C1:=HyperellipticCurve(p);
IsIsomorphic(C1,C1_temp);
J:=Jacobian(C1);
RankBound(J);
ptsC:=Points(C1 : Bound:=1000); ptsC;
A:=Automorphisms(C1);
G:=AutomorphismGroup(C1,[A[3]]);
E,map:=CurveQuotient(G);
E;
DescentInformation(E);
g,m:=TorsionSubgroup(E);
P1:=m(g.1);
P1;
RationalPoints(Difference(Pullback(map,P1), BaseScheme(map)));
RationalPoints(Difference(Pullback(map,2*P1), BaseScheme(map)));
RationalPoints(Difference(Pullback(map,3*P1), BaseScheme(map)));

//What follows is the determination of rational points on C2

f2:=(x^2 - 1)*t^2 - 4*x^2*t - x^3 + 2*x^2 - x;
d2:=Discriminant(Numerator(f2));
C2:=HyperellipticCurve(d2/4);
p:=-16*t^7 + 16*t^6 - 128*t^5 + 388*t^4 - 448*t^3 + 216*t^2 - 48*t + 4;
IsIsomorphic(HyperellipticCurve(d2),HyperellipticCurve(p));


//What follows is the determination of rational points on C3


f3:=(x^3 - x)*t^2 + 4*x^2*t - x^2 + 2*x - 1;
d3:=Discriminant(Numerator(f3));
C3:=HyperellipticCurve(d3/4);
p:=t*(t^7 - 2*t^5 + 16*t^4 - 15*t^3 + 36*t^2 - 32*t + 4);
C3_temp:=HyperellipticCurve(p);
IsIsomorphic(C3,C3_temp);

//What follows is the determination of rational points on C4

f4:=(x^2 - x)*t^2 - 4*x^2*t - x^3 + x^2 + x - 1;
fac:=Factorization(Numerator(d4));
fac;
C4_temp:=HyperellipticCurve(fac[2][1]*fac[3][1]);
p:=-432*t^6 - 688*t^5 - 396*t^4 - 72*t^3 + 16*t^2 + 8*t + 1;
C4:=HyperellipticCurve(p);
tr,mp:=IsIsomorphic(C4,C4_temp);
ptsC:=Points(C4 : Bound:=1000); ptsC;
J:=Jacobian(C4);
RankBound(J);
PJ1 := J! [ ptsC[3], ptsC[1] ];
Order(PJ1);
all_pts := Chabauty(PJ1); all_pts;
for a in all_pts do
a,mp(a);
end for;





// Code to find exceptional curve corresponding to a point on C4. We construct elliptic curves with 16 torsion from points on C4_temp (which is isomorphic to C4)//

K:=Rationals();
P<y>:=PolynomialRing(K);
P2<x>:=PolynomialRing(P);
t:=0;
p:=1/(x^3 + 3*x^2 + 3*x + 1)*y - 2*x/(x^3 + 3*x^2 + 3*x + 1)-t;
a:=(x^3 + 3*x^2 + 3*x + 1);
g:=-1*p*a+y;
f:=x*(x^2+1)*(x^2+2*x-1);
r:=g^2-f;
z:=Numerator(r);
Factorization(z);

t:=-1/2;
p:=1/(x^3 + 3*x^2 + 3*x + 1)*y - 2*x/(x^3 + 3*x^2 + 3*x + 1)-t;
a:=(x^3 + 3*x^2 + 3*x + 1);
g:=-1*p*a+y;
f:=x*(x^2+1)*(x^2+2*x-1);
r:=g^2-f;
z:=Numerator(r);
Factorization(z);

t:=-4/9;
p:=1/(x^3 + 3*x^2 + 3*x + 1)*y - 2*x/(x^3 + 3*x^2 + 3*x + 1)-t;
a:=(x^3 + 3*x^2 + 3*x + 1);
g:=-1*p*a+y;
f:=x*(x^2+1)*(x^2+2*x-1);
r:=g^2-f;
z:=Numerator(r);
Factorization(z);
pol:=Factorization(z)[2][1];
Type(pol);
P<x>:=PolynomialRing(Rationals());
pol:=x^3 - 33/16*x^2 - 15/16*x + 1;
NF<w>:=NumberField(pol);
C:=ChangeRing(HyperellipticCurve(f),NF);
pt:=Points(C,w)[1];
s:=pt[2];
t:=pt[1];
a:=s*(t-1)*(t^4+2*t^3+6*t-1)/((t+1)^5*(t^2+2*t-1)) + (t^5+t^4+14*t^3+6*t^2+9*t+1)/(t+1)^5;
b:=s*(t-1)^3*(3*t^4+8*t^3-2*t^2+8*t-1)/((t+1)^8*(t^2+2*t-1))+(t*(t-1)^3*(t^2+1)*(t^4+8*t^3+10*t^2-8*t+5))/((t+1)^8*(t^2+2*t-1));
E:=EllipticCurve([a,b,b,0,0]);
TorsionSubgroup(E);













